{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/pages/blog.js"],"names":["Pagination","slug","currentPage","numberOfPages","className","to","name","toPersianNumber","tag","data","pageContext","posts","edges","people","title","concatPeople","description","keywords","node","keyword","map","item","beforeColor","BlogPost","post","fields","fluid","mainImage","childImageSharp","alt","category","toJalaliDate","Date","created_at","readingTime","slice","BlogHeading","children","actionTitle","actionLink","actionIcon","Tag","iconName","color","size","BlogPosts","skip","key","Blog","allStrapiPost","latestPost","latestEpisode","transformEpisodesData","episode","categories","standalone","imageFluid","imageAlt","imagePosition","tagComponent","link","overlayColor","backgroundColor"],"mappings":"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","file":"component---src-templates-tag-js-6077c24dbc1404cfed86.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\n\nimport {\n  Icon,\n  Container,\n  Section,\n  Main,\n  Header,\n  Footer,\n} from \"../components/Lib\"\nimport { BlogPosts } from \"../pages/blog\"\nimport { toPersianNumber, concatPeople } from \"../utils/helpers\"\n\nconst Pagination = ({ slug, currentPage, numberOfPages }) => {\n  return (\n    <div className=\"pagination\">\n      {currentPage + 1 <= numberOfPages && (\n        <Link\n          to={`/blog/tag/${slug}/${currentPage + 1}`}\n          className=\"pagination__icon navigator\"\n        >\n          <Icon name=\"arrow_right\" />\n        </Link>\n      )}\n      <div className=\"pagination__current\">\n        صفحه {toPersianNumber(currentPage)} از {toPersianNumber(numberOfPages)}\n      </div>\n      {currentPage - 1 > 0 && (\n        <Link\n          to={`/blog/tag/${slug}/${currentPage - 1}`}\n          className=\"pagination__icon navigator\"\n        >\n          <Icon name=\"arrow_left\" />\n        </Link>\n      )}\n    </div>\n  )\n}\n\nconst tag = ({ data, pageContext }) => {\n  const posts = data.posts.edges\n  const people = data.people.edges\n  return (\n    <Container>\n      <SEO\n        title={`نوشته های مرتبط به ${concatPeople(people)}`}\n        description={`داستان و نوشته های درباره ${concatPeople(\n          people\n        )} را دربلاگ بایوکست بخوانید`}\n        keywords={posts[0].node.keyword.map(item => item.title)}\n      />\n      <Header className=\"header--standalone header--blog\" />\n      <Main>\n        <Section className=\"all_posts\">\n          <h1 className=\"all_posts__title\">\n            نوشته‌های مرتبط به {concatPeople(people)}\n          </h1>\n          <div className=\"inner_wrapper\">\n            <BlogPosts posts={posts} />\n            <Pagination\n              slug={pageContext.slug}\n              currentPage={pageContext.currentPage}\n              numberOfPages={pageContext.numberOfPages}\n            />\n          </div>\n        </Section>\n      </Main>\n      <Footer beforeColor=\"white\" />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!, $people: [Int]!) {\n    people: allStrapiPerson(filter: { strapiId: { in: $people } }) {\n      edges {\n        node {\n          shownName\n          id\n        }\n      }\n    }\n    posts: allStrapiPost(\n      filter: { people: { elemMatch: { id: { in: $people } } } }\n      sort: { fields: created_at, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          title\n          created_at\n          description\n          content\n          author {\n            firstName\n            lastName\n          }\n          keyword {\n            title\n          }\n          mainImage {\n            childImageSharp {\n              fluid(quality: 70) {\n                src\n              }\n            }\n          }\n          category {\n            name\n          }\n          fields {\n            readingTime\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default tag\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport { graphql, Link } from \"gatsby\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Container,\n  Header,\n  Section,\n  Main,\n  Card,\n  Tag,\n  EpisodeCard,\n  Button,\n  Footer,\n} from \"../components/Lib\"\nimport {\n  toJalaliDate,\n  toPersianNumber,\n  transformEpisodesData,\n} from \"../utils/helpers\"\n\nexport const BlogPost = ({ post }) => (\n  <Link className=\"navigator blog__post\" to={`/blog/${post.fields.slug}`}>\n    <figure className=\"blog__post__image\">\n      <Img fluid={post.mainImage.childImageSharp.fluid} alt={post.title} />\n    </figure>\n    <div className=\"blog__post__info\">\n      <div className=\"blog__post__details\">\n        {post.category.name} ∙ {toJalaliDate(new Date(post.created_at))} ∙{\" \"}\n        {toPersianNumber(post.fields.readingTime)} دقیقه\n      </div>\n      <div className=\"blog__post__title\">{post.title}</div>\n      <p className=\"blog__post__description\">\n        {post.description.slice(0, 250)}...\n      </p>\n    </div>\n  </Link>\n)\n\nexport const BlogHeading = ({\n  children,\n  actionTitle,\n  actionLink,\n  actionIcon,\n}) => (\n  <header className=\"blog__heading\">\n    <h3 className=\"blog__heading__title\">{children}</h3>\n\n    {actionTitle && (\n      <div className=\"blog__heading__action\">\n        <Button\n          Tag=\"Link\"\n          to={actionLink}\n          iconName={actionIcon}\n          color=\"gray-outlined\"\n          size=\"small\"\n        >\n          {actionTitle}\n        </Button>\n      </div>\n    )}\n  </header>\n)\n\nexport const BlogPosts = ({ posts, skip = 0 }) => (\n  <div className=\"blog__posts\">\n    {posts.slice(skip).map(({ node: post }) => (\n      <BlogPost key={post.fields.slug} post={post} />\n    ))}\n  </div>\n)\n\nconst Blog = ({ data }) => {\n  const posts = data.allStrapiPost.edges\n  const latestPost = posts[0].node\n  const latestEpisode = transformEpisodesData(data.episode.edges)[0]\n  const categories = data.categories.edges\n  return (\n    <Container>\n      <SEO\n        title=\"بلاگ | جدیدترین اخبار و مقالات درباره زندگی افراد موفق مانند ایلان ماسک، جف بزوس و\"\n        description=\"اخبار، داستان ها و مقالات مرتبط به افراد موفق را در بلاگ بایوکست دنبال کنید\"\n        keywords={[\"بایوکست\", \"پادکست زندگینامه\", \"زندگینامه افراد موفق\"]}\n      />\n      <Header />\n      <Main className=\"blog\">\n        <Section className=\"blog__header\">\n          <h1 className=\"blog__title\">بایوکست بلاگ</h1>\n          <div className=\"inner_wrapper\">\n            <Card\n              className=\"blog__latest_post card--primary\"\n              standalone\n              imageFluid={latestPost.mainImage.childImageSharp.fluid}\n              imageAlt={latestPost.title}\n              imagePosition={latestPost.imagePosition}\n              tagComponent={<Tag>آخرین نوشته</Tag>}\n              tag=\"Link\"\n              link={`/blog/${latestPost.fields.slug}`}\n              overlayColor=\"--primary\"\n            >\n              <div className=\"blog__latest_post__wrapper\">\n                <div className=\"blog__latest_post__info\">\n                  {latestPost.category.name} ∙{\" \"}\n                  {toJalaliDate(new Date(latestPost.created_at))} ∙{\" \"}\n                  {toPersianNumber(latestPost.fields.readingTime)} دقیقه\n                </div>\n                <div className=\"blog__latest_post__title\">\n                  {latestPost.title}\n                </div>\n              </div>\n            </Card>\n            <EpisodeCard\n              className=\"blog__latest_episode\"\n              item={latestEpisode}\n              standalone\n              tagComponent={<Tag color=\"primary\">جدیدترین اپیزود</Tag>}\n              tag=\"Link\"\n              link={`/episode/${latestEpisode.slug}`}\n            />\n          </div>\n        </Section>\n        <Section backgroundColor=\"var(--lightgray)\">\n          <div className=\"inner_wrapper\">\n            <BlogHeading\n              actionIcon=\"list\"\n              actionTitle=\"مشاهده همه نوشته‌ها\"\n              actionLink=\"/blog/all\"\n            >\n              آخرین نوشته ها\n            </BlogHeading>\n            <BlogPosts posts={posts} skip={1} />\n          </div>\n        </Section>\n      </Main>\n      <Footer />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query {\n    categories: allStrapiCategory {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    episode: allStrapiEpisode(\n      sort: { fields: episodeNumber, order: DESC }\n      limit: 1\n    ) {\n      edges {\n        node {\n          created_at\n          title\n          episodeNumber\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          squareImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allStrapiPost(sort: { fields: created_at, order: DESC }, limit: 5) {\n      edges {\n        node {\n          created_at\n          content\n          description\n          imagePosition\n          title\n          category {\n            name\n          }\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n            readingTime\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/episodes.js"],"names":["query","Episodes","data","episodes","transformEpisodesData","edges","latestEpisode","useState","isPhone","setIsPhone","useEffect","window","innerWidth","title","description","keywords","className","toPersianNumber","number","Tag","to","slug","tag","item","standalone","overlayColor","backgroundColor","slice","map","episode","key"],"mappings":"6FAAA,sHAoFaA,EAAK,aAgCHC,UAnGE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAWC,YAAsBF,EAAKC,SAASE,OAC/CC,EAAgBH,EAAS,GAFF,EAGCI,oBAAS,GAAhCC,EAHsB,KAGbC,EAHa,KAO7B,OAHAC,qBAAU,WACRD,EAAWE,OAAOC,YAAc,OAC/B,IAED,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,sCACNC,YAAY,wJAGZC,SAAU,CAAC,UAAW,mBAAoB,0BAE5C,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,UAAU,gCACjB,yBAAKA,UAAU,iBACb,6BAASA,UAAU,sCACjB,yBAAKA,UAAU,wCACZC,YAAgBX,EAAcY,SAEjC,kBAAC,IAAD,wBACA,wBAAIF,UAAU,uCACXV,EAAcO,OAGjB,uBAAGG,UAAU,6CACVV,EAAcQ,aAEjB,kBAAC,IAAD,CACEK,IAAI,OACJC,GAAE,YAAcd,EAAce,QAGlC,kBAAC,IAAD,CACEC,IAAI,OACJC,KAAMjB,EACNkB,WAAYhB,EACZiB,aAAa,aAInB,kBAAC,IAAD,CACET,UAAU,0BACVU,gBAAgB,oBAEhB,wBAAIV,UAAU,kCAAd,mBACA,6BAASA,UAAU,sCAChBb,EAASwB,MAAM,GAAGC,KAAI,SAAAC,GAAO,OAC5B,kBAAC,IAAD,CACEL,YAAU,EACVF,IAAI,OACJQ,IAAKD,EAAQhB,MACbU,KAAMM,UAMhB,kBAAC,IAAD","file":"component---src-pages-episodes-js-ac363e0f8830857b2b55.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\n\nimport {\n  Main,\n  Container,\n  Header,\n  Section,\n  EpisodeCard,\n  Footer,\n  ListenToButton,\n  Tag,\n} from \"../components/Lib\"\nimport { transformEpisodesData, toPersianNumber } from \"../utils/helpers\"\n\nconst Episodes = ({ data }) => {\n  const episodes = transformEpisodesData(data.episodes.edges)\n  const latestEpisode = episodes[0]\n  const [isPhone, setIsPhone] = useState(false)\n  useEffect(() => {\n    setIsPhone(window.innerWidth <= 425)\n  }, [])\n  return (\n    <Container>\n      <SEO\n        title=\"اپیزود های پادکست زندگینامه بایوکست\"\n        description=\"ما در پادکست فارسی بایوکست، داستان زندگی افراد موفقی رو تعریف می‌کنیم که\n            بر موانع و سختی‌های زندگیشون چیره شدن و تاثیر بزرگی از خودشون به جا\n            گذاشتند.\"\n        keywords={[\"بایوکست\", \"پادکست زندگینامه\", \"زندگینامه افراد موفق\"]}\n      />\n      <Header />\n      <Main>\n        <Section className=\"episodes_page__latestEpisode\">\n          <div className=\"inner_wrapper\">\n            <section className=\"episodes_page__latestEpisode__info\">\n              <div className=\"episodes_page__latestEpisode__number\">\n                {toPersianNumber(latestEpisode.number)}\n              </div>\n              <Tag>جدیدترین اپیزود</Tag>\n              <h2 className=\"episodes_page__latestEpisode__title\">\n                {latestEpisode.title}\n              </h2>\n\n              <p className=\"episodes_page__latestEpisode__description\">\n                {latestEpisode.description}\n              </p>\n              <ListenToButton\n                Tag=\"link\"\n                to={`/episode/${latestEpisode.slug}`}\n              />\n            </section>\n            <EpisodeCard\n              tag=\"Link\"\n              item={latestEpisode}\n              standalone={isPhone}\n              overlayColor=\"--gray\"\n            />\n          </div>\n        </Section>\n        <Section\n          className=\"episodes_page__episodes\"\n          backgroundColor=\"var(--lightgray)\"\n        >\n          <h1 className=\"episodes_page__episodes__title\">اپیزودهای گذشته</h1>\n          <section className=\"grid episodes_page__episodes__grid\">\n            {episodes.slice(1).map(episode => (\n              <EpisodeCard\n                standalone\n                tag=\"Link\"\n                key={episode.title}\n                item={episode}\n              />\n            ))}\n          </section>\n        </Section>\n      </Main>\n      <Footer />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query {\n    episodes: allStrapiEpisode(sort: { fields: episodeNumber, order: DESC }) {\n      edges {\n        node {\n          title\n          description\n          text\n          episodeNumber\n          mainImage {\n            childImageSharp {\n              fluid(quality: 70) {\n                src\n              }\n            }\n          }\n          squareImage {\n            childImageSharp {\n              fluid(quality: 70) {\n                src\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Episodes\n"],"sourceRoot":""}
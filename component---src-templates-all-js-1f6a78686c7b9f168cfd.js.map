{"version":3,"sources":["webpack:///./src/templates/all.js","webpack:///./src/pages/blog.js"],"names":["Pagination","currentPage","numberOfPages","className","to","name","toPersianNumber","all","data","pageContext","posts","edges","title","description","beforeColor","BlogPost","post","fields","slug","fluid","mainImage","childImageSharp","alt","category","toJalaliDate","Date","created_at","readingTime","slice","BlogHeading","children","actionTitle","actionLink","actionIcon","Tag","iconName","color","size","BlogPosts","skip","map","node","key","Blog","allStrapiPost","latestPost","latestEpisode","transformEpisodesData","episode","categories","keywords","standalone","imageFluid","imageAlt","imagePosition","tagComponent","tag","link","overlayColor","item","backgroundColor"],"mappings":"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","file":"component---src-templates-all-js-1f6a78686c7b9f168cfd.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\n\nimport {\n  Icon,\n  Container,\n  Section,\n  Main,\n  Header,\n  Footer,\n} from \"../components/Lib\"\nimport { BlogPosts } from \"../pages/blog\"\nimport { toPersianNumber } from \"../utils/helpers\"\n\nconst Pagination = ({ currentPage, numberOfPages }) => {\n  return (\n    <div className=\"pagination\">\n      {currentPage + 1 <= numberOfPages && (\n        <Link\n          to={`/blog/all/${currentPage + 1}`}\n          className=\"pagination__icon navigator\"\n        >\n          <Icon name=\"arrow_right\" />\n        </Link>\n      )}\n      <div className=\"pagination__current\">\n        صفحه {toPersianNumber(currentPage)} از {toPersianNumber(numberOfPages)}\n      </div>\n      {currentPage - 1 > 0 && (\n        <Link\n          to={`/blog/all/${currentPage - 1}`}\n          className=\"pagination__icon navigator\"\n        >\n          <Icon name=\"arrow_left\" />\n        </Link>\n      )}\n    </div>\n  )\n}\n\nconst all = ({ data, pageContext }) => {\n  const posts = data.posts.edges\n  return (\n    <Container>\n      <SEO title=\"همه نوشته ها\" description=\"نوشته های بلاگ بایوکست در یک جا\" />\n      <Header />\n      <Main>\n        <Section className=\"all_posts\">\n          <h1 className=\"all_posts__title\">همه نوشته‌ها</h1>\n          <div className=\"inner_wrapper\">\n            <BlogPosts posts={posts} />\n            <Pagination\n              currentPage={pageContext.currentPage}\n              numberOfPages={pageContext.numberOfPages}\n            />\n          </div>\n        </Section>\n      </Main>\n      <Footer beforeColor=\"white\" />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    posts: allStrapiPost(\n      sort: { fields: created_at, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          title\n          created_at\n          description\n          content\n          author {\n            firstName\n            lastName\n          }\n          mainImage {\n            childImageSharp {\n              fluid(quality: 70) {\n                src\n              }\n            }\n          }\n          category {\n            name\n          }\n          fields {\n            readingTime\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default all\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport { graphql, Link } from \"gatsby\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Container,\n  Header,\n  Section,\n  Main,\n  Card,\n  Tag,\n  EpisodeCard,\n  Button,\n  Footer,\n} from \"../components/Lib\"\nimport {\n  toJalaliDate,\n  toPersianNumber,\n  transformEpisodesData,\n} from \"../utils/helpers\"\n\nexport const BlogPost = ({ post }) => (\n  <Link className=\"navigator blog__post\" to={`/blog/${post.fields.slug}`}>\n    <figure className=\"blog__post__image\">\n      <Img fluid={post.mainImage.childImageSharp.fluid} alt={post.title} />\n    </figure>\n    <div className=\"blog__post__info\">\n      <div className=\"blog__post__details\">\n        {post.category.name} ∙ {toJalaliDate(new Date(post.created_at))} ∙{\" \"}\n        {toPersianNumber(post.fields.readingTime)} دقیقه\n      </div>\n      <div className=\"blog__post__title\">{post.title}</div>\n      <p className=\"blog__post__description\">\n        {post.description.slice(0, 250)}...\n      </p>\n    </div>\n  </Link>\n)\n\nexport const BlogHeading = ({\n  children,\n  actionTitle,\n  actionLink,\n  actionIcon,\n}) => (\n  <header className=\"blog__heading\">\n    <h3 className=\"blog__heading__title\">{children}</h3>\n\n    {actionTitle && (\n      <div className=\"blog__heading__action\">\n        <Button\n          Tag=\"Link\"\n          to={actionLink}\n          iconName={actionIcon}\n          color=\"gray-outlined\"\n          size=\"small\"\n        >\n          {actionTitle}\n        </Button>\n      </div>\n    )}\n  </header>\n)\n\nexport const BlogPosts = ({ posts, skip = 0 }) => (\n  <div className=\"blog__posts\">\n    {posts.slice(skip).map(({ node: post }) => (\n      <BlogPost key={post.fields.slug} post={post} />\n    ))}\n  </div>\n)\n\nconst Blog = ({ data }) => {\n  const posts = data.allStrapiPost.edges\n  const latestPost = posts[0].node\n  const latestEpisode = transformEpisodesData(data.episode.edges)[0]\n  const categories = data.categories.edges\n  return (\n    <Container>\n      <SEO\n        title=\"بلاگ | جدیدترین اخبار و مقالات درباره زندگی افراد موفق مانند ایلان ماسک، جف بزوس و\"\n        description=\"اخبار، داستان ها و مقالات مرتبط به افراد موفق را در بلاگ بایوکست دنبال کنید\"\n        keywords={[\"بایوکست\", \"پادکست زندگینامه\", \"زندگینامه افراد موفق\"]}\n      />\n      <Header />\n      <Main className=\"blog\">\n        <Section className=\"blog__header\">\n          <h1 className=\"blog__title\">بایوکست بلاگ</h1>\n          <div className=\"inner_wrapper\">\n            <Card\n              className=\"blog__latest_post card--primary\"\n              standalone\n              imageFluid={latestPost.mainImage.childImageSharp.fluid}\n              imageAlt={latestPost.title}\n              imagePosition={latestPost.imagePosition}\n              tagComponent={<Tag>آخرین نوشته</Tag>}\n              tag=\"Link\"\n              link={`/blog/${latestPost.fields.slug}`}\n              overlayColor=\"--primary\"\n            >\n              <div className=\"blog__latest_post__wrapper\">\n                <div className=\"blog__latest_post__info\">\n                  {latestPost.category.name} ∙{\" \"}\n                  {toJalaliDate(new Date(latestPost.created_at))} ∙{\" \"}\n                  {toPersianNumber(latestPost.fields.readingTime)} دقیقه\n                </div>\n                <div className=\"blog__latest_post__title\">\n                  {latestPost.title}\n                </div>\n              </div>\n            </Card>\n            <EpisodeCard\n              className=\"blog__latest_episode\"\n              item={latestEpisode}\n              standalone\n              tagComponent={<Tag color=\"primary\">جدیدترین اپیزود</Tag>}\n              tag=\"Link\"\n              link={`/episode/${latestEpisode.slug}`}\n            />\n          </div>\n        </Section>\n        <Section backgroundColor=\"var(--lightgray)\">\n          <div className=\"inner_wrapper\">\n            <BlogHeading\n              actionIcon=\"list\"\n              actionTitle=\"مشاهده همه نوشته‌ها\"\n              actionLink=\"/blog/all\"\n            >\n              آخرین نوشته ها\n            </BlogHeading>\n            <BlogPosts posts={posts} skip={1} />\n          </div>\n        </Section>\n      </Main>\n      <Footer />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query {\n    categories: allStrapiCategory {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    episode: allStrapiEpisode(\n      sort: { fields: episodeNumber, order: DESC }\n      limit: 1\n    ) {\n      edges {\n        node {\n          created_at\n          title\n          episodeNumber\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          squareImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allStrapiPost(sort: { fields: created_at, order: DESC }, limit: 5) {\n      edges {\n        node {\n          created_at\n          content\n          description\n          imagePosition\n          title\n          category {\n            name\n          }\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n            readingTime\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}
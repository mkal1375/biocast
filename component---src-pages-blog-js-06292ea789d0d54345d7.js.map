{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogPost","post","className","to","fields","slug","fluid","mainImage","childImageSharp","alt","title","category","name","toJalaliDate","Date","created_at","toPersianNumber","readingTime","description","slice","BlogHeading","children","actionTitle","actionLink","actionIcon","Tag","iconName","color","size","BlogPosts","posts","skip","map","node","key","Blog","data","allStrapipost","edges","latestEpisode","transformEpisodesData","episode","categories","keywords","standalone","imageFluid","latestpost","imageAlt","imagePosition","tagComponent","tag","link","overlayColor","item","backgroundColor"],"mappings":"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","file":"component---src-pages-blog-js-06292ea789d0d54345d7.js","sourcesContent":["import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport { graphql, Link } from \"gatsby\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Container,\n  Header,\n  Section,\n  Main,\n  Card,\n  Tag,\n  EpisodeCard,\n  Button,\n  Footer,\n} from \"../components/Lib\"\nimport {\n  toJalaliDate,\n  toPersianNumber,\n  transformEpisodesData,\n} from \"../utils/helpers\"\n\nexport const BlogPost = ({ post }) => (\n  <Link className=\"navigator blog__post\" to={`/blog/${post?.fields?.slug}`}>\n    <figure className=\"blog__post__image\">\n      <Img fluid={post?.mainImage?.childImageSharp?.fluid} alt={post?.title} />\n    </figure>\n    <div className=\"blog__post__info\">\n      <div className=\"blog__post__details\">\n        {post?.category?.name} ∙ {toJalaliDate(new Date(post?.created_at))} ∙{\" \"}\n        {toPersianNumber(post?.fields?.readingTime)} دقیقه\n      </div>\n      <div className=\"blog__post__title\">{post?.title}</div>\n      <p className=\"blog__post__description\">\n        {post?.description?.slice(0, 250)}...\n      </p>\n    </div>\n  </Link>\n)\n\nexport const BlogHeading = ({\n  children,\n  actionTitle,\n  actionLink,\n  actionIcon,\n}) => (\n  <header className=\"blog__heading\">\n    <h3 className=\"blog__heading__title\">{children}</h3>\n\n    {actionTitle && (\n      <div className=\"blog__heading__action\">\n        <Button\n          Tag=\"Link\"\n          to={actionLink}\n          iconName={actionIcon}\n          color=\"gray-outlined\"\n          size=\"small\"\n        >\n          {actionTitle}\n        </Button>\n      </div>\n    )}\n  </header>\n)\n\nexport const BlogPosts = ({ posts, skip = 0 }) => (\n  <div className=\"blog__posts\">\n    {posts.slice(skip).map(({ node: post }) => (\n      <BlogPost key={post?.fields.slug} post={post} />\n    ))}\n  </div>\n)\n\nconst Blog = ({ data }) => {\n  const posts = data.allStrapipost?.edges\n  const latestPost = posts[0].node\n  const latestEpisode = transformEpisodesData(data.episode.edges)[0]\n  const categories = data.categories.edges\n  return (\n    <Container>\n      <SEO\n        title=\"بلاگ | جدیدترین اخبار و مقالات درباره زندگی افراد موفق مانند ایلان ماسک، جف بزوس و\"\n        description=\"اخبار، داستان ها و مقالات مرتبط به افراد موفق را در بلاگ بایوکست دنبال کنید\"\n        keywords={[\"بایوکست\", \"پادکست زندگینامه\", \"زندگینامه افراد موفق\"]}\n      />\n      <Header />\n      <Main className=\"blog\">\n        <Section className=\"blog__header\">\n          <h1 className=\"blog__title\">بایوکست بلاگ</h1>\n          <div className=\"inner_wrapper\">\n            <Card\n              className=\"blog__latest_post card--primary\"\n              standalone\n              imageFluid={latestpost?.mainImage.childImageSharp.fluid}\n              imageAlt={latestpost?.title}\n              imagePosition={latestpost?.imagePosition}\n              tagComponent={<Tag>آخرین نوشته</Tag>}\n              tag=\"Link\"\n              link={`/blog/${latestpost?.fields.slug}`}\n              overlayColor=\"--primary\"\n            >\n              <div className=\"blog__latest_post__wrapper\">\n                <div className=\"blog__latest_post__info\">\n                  {latestpost?.category.name} ∙{\" \"}\n                  {toJalaliDate(new Date(latestpost?.created_at))} ∙{\" \"}\n                  {toPersianNumber(latestpost?.fields.readingTime)} دقیقه\n                </div>\n                <div className=\"blog__latest_post__title\">\n                  {latestpost?.title}\n                </div>\n              </div>\n            </Card>\n            <EpisodeCard\n              className=\"blog__latest_episode\"\n              item={latestEpisode}\n              standalone\n              tagComponent={<Tag color=\"primary\">جدیدترین اپیزود</Tag>}\n              tag=\"Link\"\n              link={`/episode/${latestEpisode.slug}`}\n            />\n          </div>\n        </Section>\n        <Section backgroundColor=\"var(--lightgray)\">\n          <div className=\"inner_wrapper\">\n            <BlogHeading\n              actionIcon=\"list\"\n              actionTitle=\"مشاهده همه نوشته‌ها\"\n              actionLink=\"/blog/all\"\n            >\n              آخرین نوشته ها\n            </BlogHeading>\n            <BlogPosts posts={posts} skip={1} />\n          </div>\n        </Section>\n      </Main>\n      <Footer />\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query {\n    categories: allStrapiCategory {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    episode: allStrapiEpisode(\n      sort: { fields: episodeNumber, order: DESC }\n      limit: 1\n    ) {\n      edges {\n        node {\n          created_at\n          title\n          episodeNumber\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          squareImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allStrapiPost(sort: { fields: created_at, order: DESC }, limit: 5) {\n      edges {\n        node {\n          created_at\n          content\n          description\n          imagePosition\n          title\n          category {\n            name\n          }\n          mainImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n            readingTime\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}